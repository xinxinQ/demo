<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com.ILog.Data</name>
    </assembly>
    <members>
        <member name="M:Com.ILog.Data.DataAggregate.GetDataSet(System.Data.SqlClient.SqlDataReader)">
            <summary>
            DataReader读取数据返回DataSet
            </summary>
            <param name="datareader">装载数据的DataReader实例</param>
            <returns>返回DateSet</returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetDataTable(System.Data.SqlClient.SqlDataReader)">
            <summary>
            DataReader读取数据返回DataTable
            </summary>
            <param name="datareader">装载数据的DataReader实例</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetDataTableN(System.String)">
            <summary>
            无参返回表
            </summary>
            <param name="Procedure">存储过程名</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetDateTabel(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            获取数据列表
            </summary>
            <param name="procedure">存储过程名称</param>
            <param name="parm">存储过程的参数</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetDataTables(System.String)">
            <summary>
            获取多张表，无参数
            </summary>
            <param name="procedure">存储过程名称</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetDataTables(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            获取多张表
            </summary>
            <param name="procedure">存储过程名</param>
            <param name="commandParameters">参数对象</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnInfo(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            读取表的其中一列
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columnname">读取的列名</param>
            <param name="parm">参数对象</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnInfoToInt(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            读取表的其中一列具体数字列
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columnname">读取的列名</param>
            <param name="parm">参数对象</param>
            <returns>如果没有数据则是-1</returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnInfoToInt(System.String,System.String)">
            <summary>
            读取表的其中一列具体数字数字列
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columnname">读取的列名</param>
            <returns>如果没有数据则是-1</returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnsInfo(System.String,System.Int32)">
            <summary>
            读取表的多列
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columncount">总列数</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnsInfo(System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            读取表的多列
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columncount">总列数</param>
            <param name="parm">参数对象</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnsInfoToInt(System.String,System.Int32)">
            <summary>
            读取表的多列
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columncount">总列数</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnsInfoToInt(System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            读取表的多列
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columnindex">总列数</param>
            <param name="parm">参数对象</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnsInfo``1(System.String,System.Int32)">
            <summary>
            读取表的多
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columnindex">总列数</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetColumnsInfo``1(System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            读取表的多
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="columncount">总列数</param>
            <param name="parm">参数对象</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.EXECprocedure(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行曾删改
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="parm">参数对象</param>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.EXECprocedureCount(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行曾删改返回受影响行数
            </summary>
            <param name="procedure">存过过程名</param>
            <param name="parm"></param>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetReaderTable(System.String)">
            <summary>
            sqldatereader读取数据返回表，有释放功能，无参
            </summary>
            <param name="procedure">存储过程名</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetSCOPE_IDENTITY(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存成过程返回id
            </summary>
            <param name="procedure">存储过程名字</param>
            <param name="parm">参数对象</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetRowDate(System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回一行数据
            </summary>
            <param name="procedure">存储过程名字</param>
            <param name="count">要返回的维数</param>
            <param name="parm">参数对象</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.GetRowDate(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回符合条件的所有数据（返回单列）
            </summary>
            <param name="procedure">存储过程名字</param>
            <param name="parm">参数对象</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.DataSelect(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32@)">
            <summary>
            获取分页数据
            </summary>
            <param name="tbname">要分页显示的表名</param>
            <param name="FieldKey">用于定位记录的主键(惟一键)字段,只能是单个字段</param>
            <param name="PageCurrent">要显示的页码</param>
            <param name="PageSize">每页的大小(记录数)</param>
            <param name="FieldShow">以逗号分隔的要显示的字段列表,如果不指定,则显示所有字段</param>
            <param name="FieldOrder">以逗号分隔的排序字段列表,可以指定在字段后面指定DESC/ASC 用于指定排序顺序</param>
            <param name="Where">查询条件</param>
            <param name="RecordCount">总页数</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DataAggregate.DataSelect2(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32@)">
            <summary>
            获取分页数据
            </summary>
            <param name="tbname">要分页显示的表名</param>
            <param name="FieldKey">用于定位记录的主键(惟一键)字段,只能是单个字段</param>
            <param name="PageCurrent">要显示的页码</param>
            <param name="PageSize">每页的大小(记录数)</param>
            <param name="FieldShow">以逗号分隔的要显示的字段列表,如果不指定,则显示所有字段</param>
            <param name="FieldOrder">以逗号分隔的排序字段列表,可以指定在字段后面指定DESC/ASC 用于指定排序顺序</param>
            <param name="Where">查询条件</param>
            <param name="RecordCount">总页数</param>
            <returns></returns>
        </member>
        <member name="T:Com.ILog.Data.DbHelperSQL">
            <summary>
            数据访问抽象基础类
            </summary>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.GetIMConnection">
            <summary>
            instrument数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.GetConnection">
            <summary>
            iLog读数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.SetConnection">
            <summary>
            iLog写数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.GetConnectionCount">
            <summary>
            连接count数据库
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteSqlCount(System.String)">
            <summary>
             执行sql语句的 UPDATE、INSERT 或 DELETE语句返回受影响行数
            </summary>
            <param name="sql">SQL语句</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteSqlVoid(System.String)">
            <summary>
             执行sql语句的 UPDATE、INSERT 或 DELETE语句
            </summary>
            <param name="sql">SQL语句</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteSqlsTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，打开一次连接，实现数据库事务
            </summary>
            <param name="sqllist">sqllist</param>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.GetDataTable(System.String)">
            <summary>
            执行sql语句返回一个DataTable（集合）
            </summary>
            <param name="sql">sql</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.GetDataInfo(System.String,System.String)">
            <summary>
            执行sql语句返回某一个字段
            </summary>
            <param name="sql">sql</param>
            <param name="count">要读取的列名</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程或sql语句
            </summary>
            <param name="connection">数据库连接</param>
            <param name="cmdType">执行的类型（sql语句或者存储过程）</param>
            <param name="cmdText">存储过程名字或sql语句</param>
            <param name="commandParameters">SqlParameter数组</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程或sql语句（事物处理）
            </summary>
            <param name="trans">事物对象</param>
            <param name="cmdType">执行的类型（sql语句或者存储过程）</param>
            <param name="cmdText">存储过程名字或sql语句</param>
            <param name="commandParameters">SqlParameter数组</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程或sql语句（事物处理）
            </summary>
            <param name="trans">事物对象</param>
            <param name="connection">连接对象</param>
            <param name="cmdType">执行类型</param>
            <param name="cmdText">sql语句或存储过程</param>
            <param name="commandParameters">SqlParameter数组</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteReader(System.Data.CommandType,System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程或sql语句返回SqlDataReader对象
            </summary>
            <param name="cmdType">执行的类型（sql语句或者存储过程）</param>
            <param name="connection">连接对象</param>
            <param name="cmdText">存储过程名字或sql语句</param>
            <param name="commandParameters">SqlParameter数组</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程或sql语句返回SqlDataReader对象
            </summary>
            <param name="trans">事务对象</param>
            <param name="cmdType">执行的类型（sql语句或者存储过程）</param>
            <param name="connection">连接对象</param>
            <param name="cmdText">存储过程名字或sql语句</param>
            <param name="commandParameters">SqlParameter数组</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteReader(System.Data.CommandType,System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            执行sql语句SqlDataReader对象
            </summary>
            <param name="cmdType">执行类型（只能是sql语句）</param>
            <param name="connection">连接对象</param>
            <param name="cmdText">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程或sql语句并返回查询所返回的结果集中第一行的第一列。忽略其他列或行。
            </summary>
            <param name="connection">连接对象</param>
            <param name="cmdType">执行的类型（sql语句或者存储过程）</param>
            <param name="cmdText">存储过程名字或sql语句</param>
            <param name="commandParameters">SqlParameter数组</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbHelperSQL.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            匹配ADO对象
            </summary>
            <param name="Comm"></param>
            <param name="connection"></param>
            <param name="trans"></param>
            <param name="cmdType"></param>
            <param name="cmdText"></param>
            <param name="cmdParms"></param>
        </member>
        <member name="M:Com.ILog.Data.DbEncrypt.DECEncrypt(System.String,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="pToEncrypt">加密字符串</param>
            <param name="sKey">key</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbEncrypt.DECDecrypt(System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="pToDecrypt">解密字符串</param>
            <param name="sKey">key</param>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbEncrypt.GenerateKey">
            <summary>
            创建Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.ILog.Data.DbEncrypt.EncryptString(System.String,System.Byte[],System.Byte[])">
            <summary>
            aes加密
            </summary>
            <param name="originalString">连字符串</param>
            <param name="key">key值</param>
            <param name="iv">偏移量</param>
            <returns>返回一个加密后的字符串</returns>
        </member>
        <member name="M:Com.ILog.Data.DbEncrypt.DecryptString(System.String,System.Byte[],System.Byte[])">
            <summary>
            aes解密
            </summary>
            <param name="secretString">密码字符串</param>
            <param name="key">key值</param>
            <param name="iv">编移量</param>
            <returns>返回连库字符串</returns>
        </member>
    </members>
</doc>
